const Pool = require('pg').Pool;
//const password = process.env.PASSWORD;
const pool = new Pool({
    user: "postgres",
    password: "parool",
    database: "testWad",
    host: "localhost",
    port: "5432"
});

const execute = async(query1,query2) => {
    try {
        await pool.connect(); // gets connection
        await pool.query(query1); // sends queries
        await pool.query(query2);
        return true;
    } catch (error) {
        console.error(error.stack);
        return false;
    }
};

// "SERIAL" pseudo-type is used to create a sequence object,
// and set the next value generated by the sequence as the default value for the column
const createTblQuery1 = `
    CREATE TABLE IF NOT EXISTS "posttable" (
	    "id" SERIAL PRIMARY KEY,         
	    "title" VARCHAR(200) NOT NULL,
	    "body" VARCHAR(200) NOT NULL,
    );`;

const createTblQuery2 = `
CREATE TABLE IF NOT EXISTS "users" (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    email VARCHAR(200) NOT NULL UNIQUE,
    password VARCHAR(200) NOT NULL 
);`;

// A function to execute the previous queries  
execute(createTblQuery1,createTblQuery2).then(result => {
    if (result) {
        console.log('If does not exists, create the "posttable" table');
    }
});

module.exports = pool;